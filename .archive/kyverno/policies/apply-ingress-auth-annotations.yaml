---
# yaml-language-server: $schema=https://kubernetes-schemas.plexuz.xyz/clusterpolicy_v1.json
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: apply-ingress-auth-annotations
  annotations:
    policies.kyverno.io/title: Apply Ingress Auth Annotations
    policies.kyverno.io/subject: Ingress
    policies.kyverno.io/description: >-
      This policy creates auth annotations on ingresses. When
      the `auth/enabled` annotation is `true` it
      applies the nginx auth annotations for use with Authentik.
spec:
  mutateExistingOnPolicyUpdate: true
  generateExistingOnPolicyUpdate: true

  rules:
    - name: auth
      match:
        any:
          - resources:
              kinds: ["Ingress"]
              annotations:
                auth/enabled: "true"
      mutate:
        targets:
          - apiVersion: networking.k8s.io/v1
            kind: Ingress
            name: "{{ request.object.metadata.name }}"
            namespace: "{{ request.object.metadata.namespace }}"
        patchStrategicMerge:
          metadata:
            annotations:
              +(nginx.ingress.kubernetes.io/custom-http-errors): 401,403,404,500,501,502,503
              +(nginx.ingress.kubernetes.io/auth-method): GET
              +(nginx.ingress.kubernetes.io/auth-url): http://authelia.auth.svc.cluster.local/api/verify
              +(nginx.ingress.kubernetes.io/auth-signin): https://auth.plexuz.xyz?rm=$request_method
              +(nginx.ingress.kubernetes.io/auth-response-headers): Remote-User,Remote-Name,Remote-Groups,Remote-Email
              +(nginx.ingress.kubernetes.io/auth-snippet): proxy_set_header X-Forwarded-Method $request_method;
