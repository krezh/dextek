---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
  namespace: rook-ceph
spec:
  interval: 30m
  chart:
    spec:
      chart: rook-ceph-cluster
      version: v1.18.0
      sourceRef:
        kind: HelmRepository
        name: rook-release
        namespace: flux-system
  maxHistory: 3
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  driftDetection:
    mode: enabled
  values:
    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          enableRBDStats: true
          replicated:
            size: 3
            targetSizeRatio: 1
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          volumeBindingMode: Immediate
          mountOptions: ["discard"]
          parameters:
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: "{{ .Release.Namespace }}"
            csi.storage.k8s.io/fstype: ext4
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: "{{ .Release.Namespace }}"
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: "{{ .Release.Namespace }}"
            imageFeatures: layering,fast-diff,object-map,deep-flatten,exclusive-lock
            imageFormat: "2"
    cephBlockPoolsVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-blockpool
      isDefault: true
      deletionPolicy: Delete
    cephClusterSpec:
      cephVersion:
        image: quay.io/ceph/ceph:v19.2.3
      cephConfig:
        global:
          public_network: "10.10.0.0/27"
          cluster_network: "10.10.0.0/27"
          # public_addr: ""
          # cluster_addr: ""
          bdev_enable_discard: "true"
          bdev_async_discard_threads: "1"
          osd_class_update_on_start: "false"
          device_failure_prediction_mode: local # requires mgr module
      cleanupPolicy:
        confirmation: ""
        sanitizeDisks:
          dataSource: zero
          iteration: 1
          method: quick
      crashCollector:
        disable: false
      csi:
        readAffinity:
          enabled: true
      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false
      mgr:
        count: 3
        modules:
          - name: diskprediction_local
            enabled: true
          - name: insights
            enabled: true
          - name: pg_autoscaler
            enabled: true
          - name: rook
            enabled: true
      mon:
        count: 3
      network:
        provider: host
        connections:
          requireMsgr2: true
      removeOSDsIfOutAndSafeToRemove: true
      storage:
        config:
          osdsPerDevice: "1"
        useAllDevices: true
        useAllNodes: true
      resources:
        mgr:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            memory: 2Gi
        mon:
          requests:
            cpu: 1000m
            memory: 1Gi
          limits:
            memory: 1Gi
        osd:
          requests:
            cpu: 1000m
            memory: 4Gi
          limits:
            memory: 6Gi
    cephFileSystems:
      - name: ceph-filesystem
        spec:
          dataPools:
            - failureDomain: host
              name: data0
              replicated:
                size: 3
                targetSizeRatio: 1
          metadataPool:
            replicated:
              size: 3
          metadataServer:
            activeCount: 1
            activeStandby: true
        storageClass:
          allowVolumeExpansion: true
          enabled: true
          isDefault: false
          name: ceph-filesystem
          parameters:
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: "{{ .Release.Namespace }}"
            csi.storage.k8s.io/fstype: ext4
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: "{{ .Release.Namespace }}"
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: "{{ .Release.Namespace }}"
          pool: data0
          reclaimPolicy: Delete
    cephFileSystemVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-filesystem
      isDefault: false
      deletionPolicy: Delete
    cephObjectStores:
      - name: ceph-objectstore
        spec:
          dataPool:
            erasureCoded:
              codingChunks: 1
              dataChunks: 2
            failureDomain: host
          gateway:
            instances: 2
            port: 80
            priorityClassName: system-cluster-critical
          metadataPool:
            failureDomain: host
            replicated:
              size: 3
          preservePoolsOnDelete: true
        storageClass:
          enabled: true
          name: ceph-bucket
          parameters:
            region: eu-north-1
          reclaimPolicy: Delete
    monitoring:
      createPrometheusRules: true
      enabled: true
    operatorNamespace: rook-ceph
    toolbox:
      enabled: true
