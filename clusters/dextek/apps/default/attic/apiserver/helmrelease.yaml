---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app attic-apiserver
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.3.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
    controllers:
      app:
        type: deployment
        replicas: 3
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.3@sha256:8ba3204f6b293dd168766009aae2ce4fa986a29b931c2d30ac1b30238ac750b8
              pullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: attic-secret
          migrations:
            image:
              repository: ghcr.io/zhaofengli/attic
              tag: latest@sha256:7fc9a7ea9a60e8c71a688997d4dec415f02203e4e0e6dc527660d41642218b3f
              pullPolicy: IfNotPresent
            args: ["-f", "/config/server.toml", "--mode", "db-migrations"]
            env:
              TZ: Europe/Stockholm
            envFrom: *envFrom
          check-config:
            image:
              repository: ghcr.io/zhaofengli/attic
              tag: latest@sha256:7fc9a7ea9a60e8c71a688997d4dec415f02203e4e0e6dc527660d41642218b3f
              pullPolicy: IfNotPresent
            args: ["-f", "/config/server.toml", "--mode", "check-config"]
            env:
              TZ: Europe/Stockholm
            envFrom: *envFrom
        pod:
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: app
        containers:
          app:
            image:
              repository: ghcr.io/zhaofengli/attic
              tag: latest@sha256:7fc9a7ea9a60e8c71a688997d4dec415f02203e4e0e6dc527660d41642218b3f
            env:
              TZ: Europe/Stockholm
            args: ["-f", "/config/server.toml", "--mode", "api-server"]
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: &port 8080
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 10m
                memory: 250Mi
              limits:
                memory: 2000Mi

    service:
      app:
        controller: app
        ports:
          http:
            port: 8080
            targetPort: *port

    ingress:
      app:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "ingress.plexuz.xyz"
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
        hosts:
          - host: &HOST "nix-cache.plexuz.xyz"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *HOST
    persistence:
      config:
        type: configMap
        name: attic-configmap
        globalMounts:
          - path: /config/server.toml
            subPath: server.toml
            readOnly: false
      # store:
      #   type: persistentVolumeClaim
      #   accessMode: ReadWriteOnce
      #   size: 50Gi
      #   globalMounts:
      #     - path: /config/store
