---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app unifi-controller
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.2.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    controllers:
      app:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/goofball222/unifi
              tag: 9.4.19
            env:
              RUNAS_UID0: false
              RUN_CHOWN: false
              PGID: "568"
              PUID: "568"
              UNIFI_STDOUT: "true"
              JVM_INIT_HEAP_SIZE: ""
              JVM_MAX_HEAP_SIZE: 1024M
              DB_MONGO_LOCAL: true
            resources:
              requests:
                cpu: 15m
                memory: 300M
              limits:
                memory: 1500Mi
    service:
      app:
        controller: app
        type: LoadBalancer
        externalTrafficPolicy: Local
        internalTrafficPolicy: Cluster
        annotations:
          coredns.io/hostname: unifi-lb
        ports:
          https:
            port: &port 8443
            protocol: HTTPS
          controller:
            port: 8080
            protocol: HTTP
          portal-http:
            port: 8880
            protocol: HTTP
          portal-https:
            port: 8843
            protocol: HTTPS
          speedtest:
            port: 6789
            protocol: TCP
          stun:
            port: 3478
            protocol: UDP
          syslog:
            port: 5514
            protocol: UDP
          discovery:
            port: 10001
            protocol: UDP
    ingress:
      app:
        enabled: true
        className: nginx-internal
        annotations:
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: "Unifi-controller"
          gethomepage.dev/instance: "krezh"
          gethomepage.dev/group: "Tools"
          gethomepage.dev/icon: "ubiquiti.png"
        hosts:
          - host: &host "unifi.talos.plexuz.xyz"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: https
        tls:
          - hosts:
              - *host
    # route:
    #   app:
    #     hostnames: ["unifi.talos.plexuz.xyz"]
    #     annotations:
    #       gethomepage.dev/enabled: "true"
    #       gethomepage.dev/name: "{{ .Release.Name | title }}"
    #       gethomepage.dev/instance: "krezh"
    #       gethomepage.dev/group: "Tools"
    #       gethomepage.dev/icon: "ubiquiti.png"
    #       gethomepage.dev/pod-selector: >-
    #         app.kubernetes.io/instance in (
    #           {{ .Release.Name }}
    #         )
    #     parentRefs:
    #       - name: gateway-internal
    #         namespace: network
    #         sectionName: https
    #     rules:
    #       - backendRefs:
    #           - name: *app
    #             port: *port
    #         timeouts:
    #           request: 0s
    #           backendRequest: 0s
    persistence:
      config:
        enabled: true
        existingClaim: unifi-controller-config
        globalMounts:
          - path: /usr/lib/unifi/data
      logs:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /usr/lib/unifi/logs
