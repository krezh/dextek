---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app authelia
  namespace: auth
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      version: 3.6.0
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    controllers:
      app:
        type: deployment
        replicas: 3
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/authelia/authelia
              tag: 4.38.18@sha256:a5e6fa4b1dbdc296f80f9175157b145a0598690ec8cd4d6e105cd4498fe0c731
            env:
              AUTHELIA_SERVER_ADDRESS: tcp://0.0.0.0:80
              AUTHELIA_SERVER_DISABLE_HEALTHCHECK: "true"
              AUTHELIA_TELEMETRY_METRICS_ADDRESS: tcp://0.0.0.0:8080
              AUTHELIA_TELEMETRY_METRICS_ENABLED: "true"
              AUTHELIA_THEME: dark
              X_AUTHELIA_CONFIG: /config/configuration.yaml
              X_AUTHELIA_CONFIG_FILTERS: expand-env
            envFrom:
              - secretRef:
                  name: authelia-secret
              - secretRef:
                  name: authelia-postgres-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/health
                    port: &port 80
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 5m
                memory: 10Mi
              limits:
                memory: 1Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
        pod:
          enableServiceLinks: false
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            runAsNonRoot: true
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: *app
    service:
      app:
        controller: app
        ports:
          http:
            port: *port
          metrics:
            enabled: true
            port: 8080
    serviceMonitor:
      app:
        serviceName: *app
        enabled: true
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
    ingress:
      app:
        className: external
        annotations:
          nginx.ingress.kubernetes.io/configuration-snippet: |
            add_header Cache-Control "no-store";
            add_header Pragma "no-cache";
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-XSS-Protection "1; mode=block";
        enabled: true
        hosts:
          - host: &host auth.plexuz.xyz
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        type: configMap
        name: authelia
        globalMounts:
          - path: /config/configuration.yaml
            subPath: configuration.yaml
            readOnly: true
