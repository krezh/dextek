---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app whisparr
  namespace: downloads
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: ${APP_UID}
        runAsGroup: ${APP_GID}
        fsGroup: ${APP_GID}
        fsGroupChangePolicy: OnRootMismatch
    controllers:
      app:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/krezh/whisparr-nightly
              tag: 2.0.0.548
            env:
              TZ: Europe/Stockholm
              WHISPARR__INSTANCE_NAME: whisparr
              WHISPARR__PORT: &port 8989
              WHISPARR__LOG_LEVEL: info
              WHISPARR__APPLICATION_URL: "https://{{ .Release.Name }}.plexuz.xyz"
              whisparr__AUTHENTICATION_METHOD: external
            envFrom: &envFrom
              - secretRef:
                  name: whisparr-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 48m
                memory: 671M
              limits:
                memory: 4000M
    service:
      app:
        controller: app
        ports:
          http:
            port: 80
            targetPort: *port
    ingress:
      app:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "ingress.plexuz.xyz"
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: http://authelia.auth.svc.cluster.local/api/verify
          nginx.ingress.kubernetes.io/auth-signin: https://auth.plexuz.xyz?rm=$request_method
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: "Whisparr"
          gethomepage.dev/instance: "krezh"
          gethomepage.dev/group: "Media"
          gethomepage.dev/icon: "whisparr.png"
        hosts:
          - host: &HOST "{{ .Release.Name }}.plexuz.xyz"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
        tls:
          - hosts:
              - *HOST
      api:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "ingress.plexuz.xyz"
        hosts:
          - host: &HOST "{{ .Release.Name }}.plexuz.xyz"
            paths:
              - path: /api
                pathType: Prefix
                service:
                  identifier: app
        tls:
          - hosts:
              - *HOST
    persistence:
      config:
        enabled: true
        existingClaim: whisparr-config
      media:
        enabled: true
        existingClaim: media
      downloads:
        enabled: true
        type: persistentVolumeClaim
        existingClaim: downloads
