---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app radarr
  namespace: downloads
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
    controllers:
      app:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/radarr
              tag: 6.0.2.10271@sha256:12b8348c57c556d837d28bbc73a8837fb7f402a29aba40385a0513dbd068881b
            env:
              RADARR__APP__INSTANCENAME: Radarr
              RADARR__APP__THEME: dark
              RADARR__SERVER__PORT: &port 7878
              RADARR__AUTHENTICATION_METHOD: External
              RADARR__LOG__DBENABLED: "False"
              RADARR__LOG__LEVEL: info
              RADARR__UPDATE__BRANCH: develop
            envFrom: &envFrom
              - secretRef:
                  name: radarr-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              limits:
                memory: 2143Mi
    service:
      app:
        controller: app
        ports:
          http:
            port: 80
            targetPort: *port
    route:
      app:
        hostnames: ["{{ .Release.Name }}.plexuz.xyz"]
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: "{{ .Release.Name | title }}"
          gethomepage.dev/instance: ""
          gethomepage.dev/group: "Media"
          gethomepage.dev/icon: "{{ .Release.Name }}.png"
          gethomepage.dev/widget.url: "http://{{ .Release.Name }}.{{ .Release.Namespace }}.svc.cluster.local"
          gethomepage.dev/widget.type: "{{ .Release.Name }}"
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_RADARR_APIKEY}}` }}"
          gethomepage.dev/pod-selector: >-
            app.kubernetes.io/instance in (
              {{ .Release.Name }}
            )
        parentRefs:
          - name: gateway-external
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: 80
            matches:
              - path:
                  type: PathPrefix
                  value: /
      api:
        hostnames: ["{{ .Release.Name }}.plexuz.xyz"]
        parentRefs:
          - name: gateway-external
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: 80
            matches:
              - path:
                  type: PathPrefix
                  value: /api
    persistence:
      config:
        enabled: true
        existingClaim: radarr-config
      media:
        type: nfs
        server: 10.10.0.2
        path: /mnt/tank/media
        globalMounts:
          - path: /media
      downloads:
        enabled: true
        existingClaim: downloads
