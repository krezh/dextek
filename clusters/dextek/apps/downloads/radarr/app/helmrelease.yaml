---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app radarr
  namespace: downloads
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
    controllers:
      app:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/radarr-develop
              tag: 5.6.0.8846@sha256:99c264af3f2d177e6674a9b304b64a35261202de30e54b35d5758d40edd94366
            env:
              TZ: Europe/Stockholm
              RADARR__APP__INSTANCENAME: Radarr
              RADARR__APP__THEME: dark
              RADARR__SERVER__PORT: &port 7878
              RADARR__AUTHENTICATION_METHOD: External
              RADARR__LOG__DBENABLED: "False"
              RADARR__LOG__LEVEL: info
            envFrom: &envFrom
              - secretRef:
                  name: radarr-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              limits:
                memory: 8Gi
          exporter:
            image:
              repository: ghcr.io/onedr0p/exportarr
              tag: v2.0.1@sha256:727e7bc8f2f0934a2117978c59f4476b954018b849a010ea6cfb380bd6539644
            args:
              - *app
            ports:
              - name: metrics
                containerPort: &metrics 3000
            env:
              TZ: Europe/Stockholm
              PORT: *metrics
              URL: http://localhost:7878
              ENABLE_ADDITIONAL_METRICS: false
            envFrom: *envFrom
            resources:
              requests:
                cpu: 100m
                memory: 64M
              limits:
                memory: 1000M
    service:
      app:
        controller: app
        ports:
          http:
            port: 80
            targetPort: *port
          metrics:
            port: *metrics
    serviceMonitor:
      app:
        serviceName: radarr
        enabled: true
        endpoints:
          - port: metrics
            scheme: http
            interval: 1m
            scrapeTimeout: 10s

    ingress:
      app:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "ingress.plexuz.xyz"
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: http://authelia.auth.svc.cluster.local/api/verify
          nginx.ingress.kubernetes.io/auth-signin: https://auth.plexuz.xyz?rm=$request_method
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: "Radarr"
          gethomepage.dev/instance: ""
          gethomepage.dev/group: "Media"
          gethomepage.dev/icon: "radarr.png"
          gethomepage.dev/widget.url: "http://radarr.downloads.svc.cluster.local"
          gethomepage.dev/widget.type: "radarr"
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_RADARR_APIKEY}}` }}"
          gethomepage.dev/pod-selector: >-
            app.kubernetes.io/instance in (
              {{ .Release.Name }}
            )
        hosts:
          - host: &HOST "{{ .Release.Name }}.plexuz.xyz"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *HOST
      api:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "ingress.plexuz.xyz"
        hosts:
          - host: &HOST "{{ .Release.Name }}.plexuz.xyz"
            paths:
              - path: /api
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *HOST
    persistence:
      config:
        enabled: true
        existingClaim: radarr-config
      media:
        enabled: true
        existingClaim: media
      downloads:
        enabled: true
        existingClaim: downloads
