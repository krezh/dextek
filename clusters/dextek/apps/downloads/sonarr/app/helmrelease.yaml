---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app sonarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.0.4
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
    controllers:
      app:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/sonarr
              tag: 4.0.2.1183@sha256:42ba5af9b0ea20f4db4622991e0f1657be02c6e8747872c652fdac193c097b25
            env:
              TZ: Europe/Stockholm
              SONARR__INSTANCE_NAME: Sonarr
              SONARR__PORT: &port 8989
              SONARR__LOG_LEVEL: info
              SONARR__APPLICATION_URL: "https://{{ .Release.Name }}.plexuz.xyz"
              SONARR__AUTHENTICATION_METHOD: external
            envFrom: &envFrom
              - secretRef:
                  name: sonarr-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 48m
                memory: 1000M
              limits:
                memory: 6000M
          exporter:
            image:
              repository: ghcr.io/onedr0p/exportarr
              tag: v2.0.0@sha256:760327e885a9bb5b818b56e8a6f818c9570eeaa9484bed122028adbf80bcaeb9
            args:
              - *app
            ports:
              - name: metrics
                containerPort: &metrics 3000
            env:
              TZ: Europe/Stockholm
              PORT: *metrics
              URL: http://localhost:8989
              ENABLE_ADDITIONAL_METRICS: false
            envFrom: *envFrom
            resources:
              requests:
                cpu: 100m
                memory: 64M
              limits:
                memory: 256M
    service:
      app:
        controller: app
        ports:
          http:
            port: 80
            targetPort: *port
          metrics:
            port: *metrics
    serviceMonitor:
      app:
        serviceName: sonarr
        enabled: true
        endpoints:
          - port: metrics
            scheme: http
            interval: 1m
            scrapeTimeout: 10s
    ingress:
      app:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "ingress.plexuz.xyz"
          nginx.ingress.kubernetes.io/custom-http-errors: 401,403,404,500,501,502,503
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: http://authelia.auth.svc.cluster.local/api/verify
          nginx.ingress.kubernetes.io/auth-signin: https://auth.plexuz.xyz?rm=$request_method
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: "Sonarr"
          gethomepage.dev/instance: "krezh"
          gethomepage.dev/group: "Media"
          gethomepage.dev/icon: "sonarr.png"
          gethomepage.dev/widget.url: "http://sonarr.downloads.svc.cluster.local"
          gethomepage.dev/widget.type: "sonarr"
          gethomepage.dev/widget.key: "{{HOMEPAGE_VAR_SONARR_APIKEY}}"
        hosts:
          - host: &HOST "{{ .Release.Name }}.plexuz.xyz"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
        tls:
          - hosts:
              - *HOST
      api:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "ingress.plexuz.xyz"
        hosts:
          - host: &HOST "{{ .Release.Name }}.plexuz.xyz"
            paths:
              - path: /api
                pathType: Prefix
                service:
                  identifier: app
        tls:
          - hosts:
              - *HOST
    persistence:
      config:
        enabled: true
        existingClaim: sonarr-config
      media:
        enabled: true
        existingClaim: media
      downloads:
        enabled: true
        type: persistentVolumeClaim
        existingClaim: downloads
      scripts-anime-delete:
        enabled: true
        type: configMap
        name: sonarr-anime-delete
        defaultMode: 0775
        globalMounts:
          - path: /scripts/anime-delete.sh
            subPath: anime-delete.sh
            readOnly: true
