#Access control for remote IP Range
access-control-view: 192.168.1.1/24 usr
access-control-view: 192.168.10.1/24 srv
access-control-view: 192.168.20.1/24 k8s
access-control-view: 192.168.50.1/24 wifi
access-control-view: 192.168.100.1/24 iot

#View to return for external range only defined ip for firewall, assumed 192.168.100.254 is the IP of opnsense
view:
    name: "usr"
    local-zone: "usr.int.plexuz.xyz" transparent
    local-data: "heimdall.usr.int.plexuz.xyz A 192.168.1.1"
    local-data: "heimdall A 192.168.1.1"
    #view-first Unbound will try to use the views local-zone tree, and if there is no match it will search the global tree.
    view-first: yes

view:
    name: "srv"
    local-zone: "srv.int.plexuz.xyz" transparent
    local-data: "heimdall.srv.int.plexuz.xyz A 192.168.10.1"
    local-data: "heimdall A 192.168.10.1"
    #view-first Unbound will try to use the views local-zone tree, and if there is no match it will search the global tree.
    view-first: yes

view:
    name: "k8s"
    local-zone: "k8s.int.plexuz.xyz" transparent
    local-data: "heimdall.iot.int.plexuz.xyz A 192.168.20.1"
    local-data: "heimdall A 192.168.20.1"
    #view-first Unbound will try to use the views local-zone tree, and if there is no match it will search the global tree.
    view-first: yes

view:
    name: "wifi"
    local-zone: "wifi.int.plexuz.xyz" transparent
    local-data: "heimdall.wifi.int.plexuz.xyz A 192.168.50.1"
    local-data: "heimdall A 192.168.50.1"
    #view-first Unbound will try to use the views local-zone tree, and if there is no match it will search the global tree.
    view-first: yes

view:
    name: "iot"
    local-zone: "iot.int.plexuz.xyz" transparent
    local-data: "heimdall.iot.int.plexuz.xyz A 192.168.100.1"
    local-data: "heimdall A 192.168.100.1"
    #view-first Unbound will try to use the views local-zone tree, and if there is no match it will search the global tree.
    view-first: yes
