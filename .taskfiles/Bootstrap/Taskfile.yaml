---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

vars:
  BOOTSTRAP_DIR: "./clusters/dextek"

tasks:
  all:
    desc: Bootstrap all required resources
    cmds:
      - task: talos
      - task: kubelet-csr-approver
      - task: cilium
      - task: flux
      - task: helmfile

  talos:
    desc: Bootstrap Talos
    dir: "{{.BOOTSTRAP_DIR}}/terraform/talos"
    cmds:
      - tofu init --upgrade
      - tofu apply --auto-approve
      - tofu apply --var bootstrap=true --auto-approve

  helmfile:
    desc: Bootstrap Helmfile resources
    preconditions: [talos]
    cmds:
      - until helmfile -f {{.BOOTSTRAP_DIR}}/helmfile.yaml apply; do sleep 10; done

  flux:
    desc: Bootstrap Flux resources
    preconditions: [helmfile]
    cmds:
      - until kubectl apply --server-side --kustomize {{.BOOTSTRAP_DIR}}/flux; do sleep 10; done
      - sops --decrypt {{.BOOTSTRAP_DIR}}/flux/age-key.sops.yaml | kubectl apply -f -
      - sops --decrypt {{.BOOTSTRAP_DIR}}/flux/github-deploy-key.sops.yaml | kubectl apply -f -
      - sops --decrypt {{.BOOTSTRAP_DIR}}/flux/vars/cluster-secrets.sops.yaml | kubectl apply -f -
      - until kubectl apply -f {{.BOOTSTRAP_DIR}}/flux/vars/cluster-settings.yaml; do sleep 10; done
      - sleep 10
      - until kubectl apply --server-side --kustomize {{.BOOTSTRAP_DIR}}/flux/config; do sleep 10; done
